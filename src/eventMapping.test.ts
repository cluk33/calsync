import { calendar_v3 } from 'googleapis';
import { CalDAVService } from './caldav/caldav.service';
import * as eventMapping from './eventMapping';

const calDavService = CalDAVService.getInstance();
const fixtureEvents = {
  CalDav: {
    Transparent: "BEGIN:VCALENDAR\nVERSION:2.0\nPRODID:-//Apple Inc.//Mac OS X 10.15.6//EN\nCALSCALE:GREGORIAN\nBEGIN:VEVENT\nCREATED:20200925T150317Z\nUID:5CE04A6A-FBFD-4BF6-8649-BBB3CD0C8795\nDTEND;VALUE=DATE:20260102\nTRANSP:TRANSPARENT\nX-APPLE-TRAVEL-ADVISORY-BEHAVIOR:AUTOMATIC\nSUMMARY:Event CalDav Transparent\nLAST-MODIFIED:20200925T150330Z\nDTSTAMP:20200925T150331Z\nDTSTART;VALUE=DATE:20260101\nSEQUENCE:1\nBEGIN:VALARM\nX-WR-ALARMUID:4DAC8762-EDD1-4A98-83BC-CD7F7D621A33\nUID:4DAC8762-EDD1-4A98-83BC-CD7F7D621A33\nTRIGGER:-PT15H\nX-APPLE-DEFAULT-ALARM:TRUE\nATTACH;VALUE=URI:Chord\nACTION:AUDIO\nEND:VALARM\nEND:VEVENT\nEND:VCALENDAR\n",
    NonTransparent: "BEGIN:VCALENDAR\nVERSION:2.0\nPRODID:-//Apple Inc.//Mac OS X 10.15.6//EN\nCALSCALE:GREGORIAN\nBEGIN:VEVENT\nCREATED:20200925T150317Z\nUID:5CE04A6A-FBFD-4BF6-8649-BBB3CD0C8795\nDTEND;VALUE=DATE:20260102\nX-APPLE-TRAVEL-ADVISORY-BEHAVIOR:AUTOMATIC\nSUMMARY:Event CalDav NonTransparent\nLAST-MODIFIED:20200925T150330Z\nDTSTAMP:20200925T150331Z\nDTSTART;VALUE=DATE:20260101\nSEQUENCE:1\nBEGIN:VALARM\nX-WR-ALARMUID:4DAC8762-EDD1-4A98-83BC-CD7F7D621A33\nUID:4DAC8762-EDD1-4A98-83BC-CD7F7D621A33\nTRIGGER:-PT15H\nX-APPLE-DEFAULT-ALARM:TRUE\nATTACH;VALUE=URI:Chord\nACTION:AUDIO\nEND:VALARM\nEND:VEVENT\nEND:VCALENDAR\n",
    NonAllDay: "BEGIN:VCALENDAR\nVERSION:2.0\nPRODID:-//Apple Inc.//Mac OS X 10.15.7//EN\nCALSCALE:GREGORIAN\nBEGIN:VTIMEZONE\nTZID:Europe/Madrid\nBEGIN:DAYLIGHT\nTZOFFSETFROM:+0100\nRRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=-1SU\nDTSTART:19810329T020000\nTZNAME:CEST\nTZOFFSETTO:+0200\nEND:DAYLIGHT\nBEGIN:STANDARD\nTZOFFSETFROM:+0200\nRRULE:FREQ=YEARLY;BYMONTH=10;BYDAY=-1SU\nDTSTART:19961027T030000\nTZNAME:CET\nTZOFFSETTO:+0100\nEND:STANDARD\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Madrid:20201127T150000\nX-APPLE-TRAVEL-ADVISORY-BEHAVIOR:AUTOMATIC\nUID:19CD0F3A-F355-4D57-AE5C-38197E15D39D\nDTSTAMP:20200915T114436Z\nSEQUENCE:1\nSUMMARY:Event CalDav NonAllDay\nLAST-MODIFIED:20201122T145910Z\nDTSTART;TZID=Europe/Madrid:20201127T140000\nCREATED:20200904T080202Z\nRRULE:FREQ=WEEKLY\nEND:VEVENT\nBEGIN:VEVENT\nCREATED:20200904T080202Z\nUID:19CD0F3A-F355-4D57-AE5C-38197E15D39D\nDTEND;TZID=Europe/Madrid:20201204T184500\nX-APPLE-TRAVEL-ADVISORY-BEHAVIOR:AUTOMATIC\nSUMMARY:Reset Time\nLAST-MODIFIED:20201204T151202Z\nDTSTAMP:20200915T114436Z\nDTSTART;TZID=Europe/Madrid:20201204T174500\nSEQUENCE:1\nRECURRENCE-ID;TZID=Europe/Madrid:20201204T140000\nEND:VEVENT\nEND:VCALENDAR\n",
    AllDay: "BEGIN:VCALENDAR\nVERSION:2.0\nPRODID:-//Apple Inc.//Mac OS X 10.15.6//EN\nCALSCALE:GREGORIAN\nBEGIN:VEVENT\nCREATED:20200925T150317Z\nUID:5CE04A6A-FBFD-4BF6-8649-BBB3CD0C8795\nDTEND;VALUE=DATE:20260102\nX-APPLE-TRAVEL-ADVISORY-BEHAVIOR:AUTOMATIC\nSUMMARY:Event CalDav AllDay\nLAST-MODIFIED:20200925T150330Z\nDTSTAMP:20200925T150331Z\nDTSTART;VALUE=DATE:20260101\nSEQUENCE:1\nBEGIN:VALARM\nX-WR-ALARMUID:4DAC8762-EDD1-4A98-83BC-CD7F7D621A33\nUID:4DAC8762-EDD1-4A98-83BC-CD7F7D621A33\nTRIGGER:-PT15H\nX-APPLE-DEFAULT-ALARM:TRUE\nATTACH;VALUE=URI:Chord\nACTION:AUDIO\nEND:VALARM\nEND:VEVENT\nEND:VCALENDAR\n"
  }
};

describe('MapEventCalDavToGcal', () => {

  test('all-day event', () => {
    const evt = calDavService.parseToCalendarEvent(fixtureEvents.CalDav.AllDay);
    expect(eventMapping.MapEventCalDavToGCal(evt)).toStrictEqual({
      summary: 'Event CalDav AllDay',
      start: { date: '2026-01-01' },
      end: { date: '2026-01-02' }
    } as calendar_v3.Schema$Event);
  });

  test('non all-day event', () => {
    const evt = calDavService.parseToCalendarEvent(fixtureEvents.CalDav.NonAllDay);
    expect(eventMapping.MapEventCalDavToGCal(evt)).toStrictEqual({
      summary: 'Event CalDav NonAllDay',
      start: { dateTime: '2020-11-27T13:00:00.000Z' },
      end: { dateTime: '2020-11-27T14:00:00.000Z' }
    } as calendar_v3.Schema$Event);
  });

  test('transparent event', () => {
    const evt = calDavService.parseToCalendarEvent(fixtureEvents.CalDav.Transparent);
    expect(eventMapping.MapEventCalDavToGCal(evt)).toStrictEqual({
      summary: 'Event CalDav Transparent',
      start: { date: '2026-01-01' },
      end: { date: '2026-01-02' },
      transparency: 'transparent'
    } as calendar_v3.Schema$Event);
  });

  test('non-transparent event', () => {
    const evt = calDavService.parseToCalendarEvent(fixtureEvents.CalDav.NonTransparent);
    expect(eventMapping.MapEventCalDavToGCal(evt)).toStrictEqual({
      summary: 'Event CalDav NonTransparent',
      start: { date: '2026-01-01' },
      end: { date: '2026-01-02' }
    } as calendar_v3.Schema$Event);
  });
});